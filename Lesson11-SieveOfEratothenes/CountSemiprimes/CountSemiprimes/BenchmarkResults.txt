// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19041.572 (2004/?/20H1)
AMD Ryzen 7 2700X, 1 CPU, 16 logical and 8 physical cores
.NET Core SDK=5.0.100-rc.1.20452.10
  [Host]     : .NET Core 3.1.8 (CoreCLR 4.700.20.41105, CoreFX 4.700.20.41903), X64 RyuJIT
  DefaultJob : .NET Core 3.1.8 (CoreCLR 4.700.20.41105, CoreFX 4.700.20.41903), X64 RyuJIT

P = new int[] { 0, 5000, 15000, 0, 5000, 15000 };
Q = new int[] { 50000, 50000, 50000, 20000, 20000, 20000 };
N = 50000;

|                Method |       Mean |    Error |   StdDev |    Gen 0 |    Gen 1 |    Gen 2 | Allocated |
|---------------------- |-----------:|---------:|---------:|---------:|---------:|---------:|----------:|
| MyOptimalisedSolution |   512.9 us |  1.26 us |  1.17 us |  27.3438 |  27.3438 |  27.3438 | 182.56 KB |
|            MySolution | 1,924.6 us |  1.80 us |  1.50 us | 117.1875 |  58.5938 |  58.5938 | 480.39 KB |
|    MySolutionFirstTry | 3,076.6 us | 12.62 us | 10.53 us | 121.0938 | 121.0938 | 121.0938 | 710.79 KB |







P = new int[] { 0, 5000, 15000, 0, 5000, 15000 };
Q = new int[] { 5000000, 5000000, 5000000, 2000000, 2000000, 2000000 };
N = 5000000;
|                Method |      Mean |    Error |   StdDev |     Gen 0 |     Gen 1 |     Gen 2 | Allocated |
|---------------------- |----------:|---------:|---------:|----------:|----------:|----------:|----------:|
| MyOptimalisedSolution |  61.45 ms | 1.135 ms | 1.062 ms |  714.2857 |  714.2857 |  714.2857 |  14.48 MB |
|            MySolution | 271.93 ms | 3.035 ms | 2.691 ms | 1500.0000 | 1500.0000 | 1500.0000 |  76.07 MB |
|    MySolutionFirstTry | 400.55 ms | 1.770 ms | 1.569 ms | 2000.0000 | 2000.0000 | 2000.0000 |  55.72 MB |

// * Hints *
Outliers
  Bench.MyOptimalisedSolution: Default -> 2 outliers were removed (67.93 ms, 75.14 ms)
  Bench.MySolution: Default            -> 1 outlier  was  removed (282.52 ms)
  Bench.MySolutionFirstTry: Default    -> 1 outlier  was  removed (406.64 ms)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ms      : 1 Millisecond (0.001 sec)